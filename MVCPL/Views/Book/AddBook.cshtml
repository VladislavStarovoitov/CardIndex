@section body{
    @model MVCPL.Models.BookViewModel

    @{
        ViewBag.Title = "Add Book";
    }

    <h2>Add Book</h2>

    @using (Html.BeginForm("AddBook", "Book", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="form-horizontal">
            <hr />            
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.AuthorIds, new SelectList(Model.Authors, "Id", "Name") , new { @class = "form-control", @multiple = "true" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">New authors</label>
                <div class="col-md-10">
                    <input name="newAuthors" class="form-control" placeholder="Enter new authors (if necessary) separated by commas" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Genres, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.GenreIds, new SelectList(Model.Genres, "Id", "Name"), new {@class = "form-control", @multiple="true"})
                </div>
            </div>
            
            <div class="form-group">
                <label class="control-label col-md-2">New Genres</label>
                <div class="col-md-10">
                    <input name="newGenres" class="form-control" placeholder="Enter new genres (if necessary) separated by commas" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, rows:5, columns:1, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Load image</label>
                <div class="col-md-2">
                    <label class="btn btn-default">Browse<input type="file" name="ImageFile" style="display: none;"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Load book</label>
                <div class="col-md-2">
                    <label class="btn btn-default">Browse<input type="file" name="ImageFile" style="display: none;"></label>
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="AddBook" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}