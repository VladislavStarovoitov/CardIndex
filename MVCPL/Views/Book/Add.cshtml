@model MVCPL.Models.BookViewModel

@{
    ViewBag.Title = "Add Book";
}

@section body{
    <h4>Add Book</h4>

    @using (Html.BeginForm("Add", "Book", FormMethod.Post, new { @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary()
        <div class="form-horizontal">
            <hr />            
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AuthorsSelected, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.AuthorsSelected, new SelectList(Model.Authors, "Id", "Name") , new { @class = "form-control chosen", @multiple = "true" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3">Don't find the right author?</label>
                <div class="col-md-9">
                    <input name="NewAuthors" class="form-control" placeholder="Enter new authors (if necessary) separated by commas" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.GenresSelected, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.GenresSelected, new SelectList(Model.Genres, "Id", "Name"), new {@class = "form-control chosen", @multiple="true"})
                </div>
            </div>
            
            <div class="form-group">
                <label class="control-label col-md-3">Don't find the right genre?</label>
                <div class="col-md-9">
                    <input name="NewGenres" class="form-control" placeholder="Enter new genres (if necessary) separated by commas" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Description, rows:5, columns:1, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3">Load cover</label>
                <div class="col-md-3">
                    <label class="btn btn-default">Browse<input type="file" name="CoverFile" style="display: none;"></label>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-3">Load book</label>
                <div class="col-md-3">
                    <label class="btn btn-default">Browse<input type="file" name="ContentFile" style="display: none;"></label>
                </div>
            </div>
            
            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    <input type="submit" value="Add" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="@Url.Content("~/Scripts/multi-selection.js")"></script>
}